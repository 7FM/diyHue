{"version":3,"sources":["containers/Flash.js","containers/Device.js","views/Devices.js"],"names":["Flash","type","message","duration","setType","persistOnHover","className","onClick","Device","HOST_IP","api_key","id","device","setMessage","deleteDevice","axios","delete","then","fetchedData","catch","error","console","defaultChecked","onChange","e","state","currentTarget","checked","put","on","battery","battryLevel","color","title","batteryLevel","confirmAlert","buttons","label","Devices","API_KEY","useState","devices","setDevices","useEffect","fetchDevices","undefined","get","log","data","interval","setInterval","clearInterval","Object","entries","map"],"mappings":"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","file":"static/js/15.9b977722.chunk.js","sourcesContent":["import { FaTimes } from \"react-icons/fa\";\nimport FlashMessage from \"react-flash-message\";\n\nexport default function Flash({ type, message, duration, setType }) {\n  return (\n    <FlashMessage duration={duration} persistOnHover={true}>\n      <div className=\"notificationContainer\">\n        <div className={`notification ${type}`}>\n          <p>{message}</p>\n          <div className=\"icon\">\n            <FaTimes onClick={() => setType(\"none\")} />\n          </div>\n        </div>\n      </div>\n    </FlashMessage>\n  );\n}\n","import { MdDeleteForever } from \"react-icons/md\";\nimport { FaMagic } from \"react-icons/fa\";\nimport {\n  TiBatteryLow,\n  TiBatteryMid,\n  TiBatteryHigh,\n  TiBatteryFull,\n} from \"react-icons/ti\";\n\nimport axios from \"axios\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\nconst Device = ({ HOST_IP, api_key, id, device, setType, setMessage }) => {\n  const deleteAlert = () => {\n    confirmAlert({\n      title: \"Delete device \" + device[\"name\"],\n      message: \"Are you sure to do this?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => deleteDevice(),\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n\n  const deleteDevice = () => {\n    axios\n      .delete(`${HOST_IP}/api/${api_key}/sensors/${id}`)\n      .then((fetchedData) => {\n        //console.log(fetchedData.data);\n        setMessage(\"Device successfully deleted\");\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  const toggleDevice = (state) => {\n    axios\n      .put(`${HOST_IP}/api/${api_key}/sensors/${id}/config`, { on: state })\n      .then((fetchedData) => {\n        //console.log(fetchedData.data);\n        setMessage(\n          device[\"name\"] + \" successfully \" + (state ? \"enabled\" : \"disabled\")\n        );\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  const batteryLevel = () => {\n    let battery = device[\"config\"][\"battery\"];\n    let battryLevel = battery + \"%\";\n    //console.log(battery);\n    if (battery > 90) {\n      return <TiBatteryFull color=\"#27ae60\" title={battryLevel} />;\n    } else if (battery > 70) {\n      return <TiBatteryHigh  color=\"#1abc9c\" title={battryLevel} />;\n    } else if (battery > 40) {\n      return <TiBatteryMid color=\"#e67e22\" title={battryLevel} />;\n    } else {\n      return <TiBatteryLow color=\"#e74c3c\" title={battryLevel} />;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"row1\">\n        <div className=\"icon\">\n          <FaMagic />\n        </div>\n        <div className=\"text\">{device[\"name\"]}</div>\n        <div className=\"switchContainer\">\n          <label className=\"switch\">\n            <input\n              type=\"checkbox\"\n              defaultChecked={device[\"config\"][\"on\"]}\n              onChange={(e) => toggleDevice(e.currentTarget.checked)}\n            />\n            <span className=\"slider\"></span>\n          </label>\n        </div>\n      </div>\n      <div className=\"row2\">\n        <div className=\"text\">\n          ModelID: {device[\"modelid\"]} <br />\n          Type: {device[\"type\"]} <br />\n          Protocol: {device[\"protocol\"]} <br />\n        </div>\n      </div>\n      <div className=\"row3\">\n        <div className=\"battery\">{\"battery\" in device[\"config\"] && batteryLevel()}</div>\n        \n        <div className=\"iconbtn red\">\n          <MdDeleteForever title=\"Delete\" onClick={() => deleteAlert()} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Device;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Device from \"../containers/Device\";\nimport Flash from \"../containers/Flash\";\n\n\nconst Devices = ({ HOST_IP, API_KEY }) => {\n  const [devices, setDevices] = useState({});\n  const [type, setType] = useState(\"none\");\n  const [message, setMessage] = useState(\"no message\");\n\n  useEffect(() => {\n    const fetchDevices = () => {\n      if (API_KEY !== undefined) {\n        axios\n          .get(`${HOST_IP}/sensors`)\n          .then((fetchedData) => {\n            console.log(fetchedData.data);\n            setDevices(fetchedData.data);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    };\n\n    fetchDevices();\n    const interval = setInterval(() => {\n      fetchDevices();\n    }, 2000); // <<-- ⏱ 1000ms = 1s\n    return () => clearInterval(interval);\n  }, [HOST_IP, API_KEY]);\n\n  return (\n    <div className=\"content\">\n      <div className=\"inner\">\n        <div className=\"devicecontainer\">\n            \n      {type !== \"none\" && (\n        <Flash\n          type={type}\n          message={message}\n          duration=\"5000\"\n          setType={setType}\n        />\n      )}\n      <div className=\"cardGrid\">\n        <div className=\"devicecard device\">\n          {Object.entries(devices).map(([id, device]) => (\n            device[\"protocol\"] !== \"none\" &&\n            <Device\n              key={id}\n              HOST_IP={HOST_IP}\n              api_key={API_KEY}\n              id={id}\n              device={device}\n              setType={setType}\n              setMessage={setMessage}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n    </div>\n\n    </div>\n  );\n};\n\nexport default Devices;\n"],"sourceRoot":""}