{"version":3,"sources":["containers/Flash.js","containers/LightUpdate.js","containers/Light.js","containers/AddLight.js","views/Lights.js"],"names":["Flash","type","message","duration","setType","persistOnHover","className","onClick","LightUpdate","light","lightsCatalog","setMessage","UpdateLight","includes","lenght","title","confirmAlert","buttons","label","Light","HOST_IP","api_key","id","modelIds","deleteLight","axios","delete","then","fetchedData","console","log","data","catch","error","color","put","alert","options","value","onChange","e","modelid","post","placeholder","style","cursor","window","open","AddLight","API_KEY","useState","protocol","lightData","setLightData","handleChange","key","onSubmit","evt","preventDefault","formattedData","ip","config","handleForm","target","lightName","lightModelID","miID","miModes","miGroups","miBoxPort","domoticzID","jeedomlightAPI","jeedomlightID","Lights","lights","setLights","setlightsCatalog","setModelIds","lightForm","setLightForm","useEffect","fetchLights","undefined","get","interval","setInterval","clearInterval","Object","entries","map"],"mappings":"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","file":"static/js/16.6ab9a190.chunk.js","sourcesContent":["import { FaTimes } from \"react-icons/fa\";\nimport FlashMessage from \"react-flash-message\";\n\nexport default function Flash({ type, message, duration, setType }) {\n  return (\n    <FlashMessage duration={duration} persistOnHover={true}>\n      <div className=\"notificationContainer\">\n        <div className={`notification ${type}`}>\n          <p>{message}</p>\n          <div className=\"icon\">\n            <FaTimes onClick={() => setType(\"none\")} />\n          </div>\n        </div>\n      </div>\n    </FlashMessage>\n  );\n}\n","import { MdSystemUpdate } from \"react-icons/md\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\nconst LightUpdate = ({ light, lightsCatalog, setMessage, setType }) => {\n  const updateAlert = () => {\n    confirmAlert({\n      title: \"Update light \" + light[\"name\"] + \" firmware?\",\n      message: \"Are you sure to do this?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => UpdateLight(),\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n\n  const UpdateLight = () => {\n    setMessage(\"Begin light firmware update\");\n    setType(\"none\");\n    setType(\"success\");\n  };\n\n  return (\n    <>\n      {[\"native_single\", \"native_multi\"].includes(light[\"protocol\"]) &&\n        lightsCatalog.lenght > 2 &&\n        light[\"protocol_cfg\"][\"version\"] ===\n          lightsCatalog[light[\"protocol_cfg\"][\"type\"]][\"version\"] && (\n          <div className=\"btn blue\">\n            <MdSystemUpdate\n              title=\"Update available\"\n              onClick={() => updateAlert()}\n            />\n          </div>\n        )}\n    </>\n  );\n};\n\nexport default LightUpdate;\n","import { FaLightbulb } from \"react-icons/fa\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport LightUpdate from \"./LightUpdate\";\nimport axios from \"axios\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\nimport { HueIcons } from \"../icons/hass-hue-icons\"\n\nconst Light = ({\n  HOST_IP,\n  api_key,\n  id,\n  light,\n  modelIds,\n  setType,\n  setMessage,\n  lightsCatalog,\n}) => {\n  const deleteAlert = () => {\n    confirmAlert({\n      title: \"Delete light \" + light[\"name\"],\n      message: \"Are you sure to do this?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => deleteLight(),\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n\n  const deleteLight = () => {\n    axios\n      .delete(`${HOST_IP}/api/${api_key}/lights/${id}`)\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage(\"Light successfully deleted\");\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  const alertLight = () => {\n    axios\n      .put(`${HOST_IP}/api/${api_key}/lights/${id}/state`, { alert: \"select\" })\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage(\"Light alerted\");\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  const setModelId = (modelid) => {\n    console.log({ [id]: modelid });\n    axios\n      .post(`${HOST_IP}/light-types`, { [id]: modelid })\n      .then((fetchedData) => {\n        console.log(fetchedData.data);\n        setMessage(\"Modelid updated\");\n        setType(\"none\");\n        setType(\"success\");\n      })\n      .catch((error) => {\n        console.error(error);\n        setMessage(\"Error occured, check browser console\");\n        setType(\"none\");\n        setType(\"error\");\n      });\n  };\n\n  return (\n    <div className=\"devicecard light\">\n      <div className=\"row1\">\n        <div className=\"icon\">\n          <HueIcons\n          type = {\"light-\" + light[\"config\"][\"archetype\"]}\n          color= \"#eeeeee\"\n          onClick={() => alertLight()} />\n        </div>\n\n        <div className=\"text\">{light[\"name\"]} </div>\n      </div>\n      <div className=\"row3\">\n        <div className=\"form-control\">\n          <Dropdown\n            options={modelIds}\n            value={light[\"modelid\"]}\n            onChange={(e) => setModelId(e.value)}\n            placeholder=\"Choose light modelid\"\n          />\n        </div>\n        <LightUpdate\n          light={light}\n          lightsCatalog={lightsCatalog}\n          setMessage={setMessage}\n          setType={setType}\n        />\n        <div className=\"btn red\">\n          <MdDeleteForever title=\"Delete\" onClick={() => deleteAlert()} />{\" \"}\n        </div>\n      </div>\n      <div className=\"row4\">\n        <ul>\n          <li>Protocol: {light[\"protocol\"]}</li>\n          {[\"native\", \"native_multi\", \"native_single\", \"wled\", \"esphome\"].includes(light[\"protocol\"]) ? (\n            <li style={{cursor:'pointer'}} onClick={()=> window.open(\"http://\" + light[\"protocol_cfg\"][\"ip\"], \"_blank\")}>IP: {light[\"protocol_cfg\"][\"ip\"]}</li>\n          ): (\n            <li>IP: {light[\"protocol_cfg\"][\"ip\"]}</li>\n            )}\n          \n        </ul>\n      </div>\n\n      {light[\"state\"][\"reachable\"] || <div className=\"label\">Offline</div>}\n    </div>\n  );\n};\n\nexport default Light;\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nconst AddLight = ({ setType, setMessage, HOST_IP, API_KEY }) => {\n  const [lightData, setLightData] = useState({\n    protocol: \"auto\",\n  });\n\n  const handleChange = (key, value) => {\n    setLightData({\n      ...lightData,\n      [key]: value,\n    });\n  };\n\n  const handleForm = (evt) => {\n    evt.preventDefault();\n    const { protocol: lightproto, ip: lightip, ...rest } = lightData;\n    const formattedData = {\n      protocol: lightproto,\n      ip: lightip,\n      config: rest,\n    };\n    axios.post(`${HOST_IP}/api/${API_KEY}/lights`, formattedData);\n    setMessage(\"Light added\");\n    setType(\"none\");\n    setType(\"success\");\n  };\n\n  const protocols = [\n    { value: \"auto\", label: \"Autodetect\" },\n    { value: \"domoticz\", label: \"Domoticz\" },\n    { value: \"flex\", label: \"Flex\" },\n    { value: \"jeedom\", label: \"Jeedom\" },\n    { value: \"milight\", label: \"MiLight\" },\n    { value: \"mibox\", label: \"Mi Box\" },\n    { value: \"wiz\", label: \"Wiz\" },\n  ];\n\n  const milightGroups = [\"1\", \"2\", \"3\", \"4\"];\n\n  const milightModes = [\n    { value: \"rgbw\", label: \"RGBW\" },\n    { value: \"cct\", label: \"CCT\" },\n    { value: \"rgb_cct\", label: \"RGB-CCT\" },\n    { value: \"rgb\", label: \"RGB\" },\n  ];\n\n  const lightModelIds = [\n    { value: \"LOM001\", label: \"On/Off Plug\" },\n    { value: \"LWB010\", label: \"Dimmable Light\" },\n    { value: \"LTW001\", label: \"Color temperature Light\" },\n    { value: \"LCT015\", label: \"Color Light\" },\n    { value: \"LST002\", label: \"Color Strip\" },\n  ];\n\n  return (\n    <form onSubmit={(e) => handleForm(e)} className=\"add-form\">\n      <div className=\"form-control\">\n      <label>Protocol:</label>\n      <Dropdown\n        options={protocols}\n        value={lightData.protocol}\n        // On Dropdown component use e.value\n        onChange={(e) => handleChange(\"protocol\", e.value)}\n        placeholder=\"Choose light protocol\"\n      />\n      </div>\n      <div className=\"form-control\">\n        <label>Light IP Address:</label>\n        <input\n          type=\"text\"\n          placeholder=\"192.168.x.x\"\n          value={lightData.ip}\n          // On regular HTML input components use e.taget.value\n          onChange={(e) => handleChange(\"ip\", e.target.value)}\n        />\n      </div>\n      {lightData.protocol !== \"auto\" && (\n        <>\n          <div className=\"form-control\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              value={lightData.lightName}\n              onChange={(e) => handleChange(\"lightName\", e.target.value)}\n              placeholder=\"Name used on diyhue\"\n            />\n          </div>\n          <div className=\"form-control\">\n            <Dropdown\n              options={lightModelIds}\n              value={lightData.lightModelID}\n              onChange={(e) => handleChange(\"lightModelID\", e.value)}\n              placeholder=\"Emulated light type\"\n            />\n          </div>\n        </>\n      )}\n      {(lightData.protocol === \"milight\" || lightData.protocol === \"mibox\") && (\n        <>\n          <div className=\"form-control\">\n            <label>Device ID</label>\n            <input\n              type=\"text\"\n              value={lightData.miID}\n              onChange={(e) => handleChange(\"miID\", e.target.value)}\n              placeholder=\"0x1234\"\n            />\n          </div>\n          <Dropdown\n            options={milightModes}\n            value={lightData.miModes}\n            onChange={(e) => handleChange(\"miModes\", e.value)}\n            placeholder=\"Choose light mode\"\n          />\n          <Dropdown\n            options={milightGroups}\n            value={lightData.miGroups}\n            onChange={(e) => handleChange(\"miGroups\", e.value)}\n            placeholder=\"Choose light group\"\n          />\n        </>\n      )}\n      {lightData.protocol === \"mibox\" && (\n        <div className=\"form-control\">\n          <label>Port</label>\n          <input\n            type=\"number\"\n            placeholder=\"Mi Box port\"\n            value={lightData.miBoxPort}\n            onChange={(e) => handleChange(\"miboxPort\", e.target.value)}\n          />\n        </div>\n      )}\n      {lightData.protocol === \"domoticz\" && (\n        <div className=\"form-control\">\n          <label>Device ID</label>\n          <input\n            type=\"text\"\n            placeholder=\"\"\n            value={lightData.domoticzID}\n            onChange={(e) => handleChange(\"domoticzID\", e.target.value)}\n          />\n        </div>\n      )}\n      {lightData.protocol === \"jeedom\" && (\n        <>\n          <div className=\"form-control\">\n            <label>Light Api</label>\n            <input\n              type=\"text\"\n              placeholder=\"Light Api\"\n              value={lightData.jeedomlightAPI}\n              onChange={(e) => handleChange(\"jeedomlightAPI\", e.target.value)}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label>Light ID</label>\n            <input\n              type=\"text\"\n              placeholder=\"Light ID\"\n              value={lightData.jeedomlightID}\n              onChange={(e) => handleChange(\"jeedomlightID\", e.target.value)}\n            />\n          </div>\n        </>\n      )}\n      <div className=\"form-control\">\n        <input type=\"submit\" value=\"Add Light\" className=\"btn btn-block\" />\n      </div>\n    </form>\n  );\n};\n\nexport default AddLight;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Light from \"../containers/Light\";\nimport AddLight from \"../containers/AddLight\";\nimport Flash from \"../containers/Flash\";\n\nexport default function Lights({ HOST_IP, API_KEY }) {\n  const [lights, setLights] = useState({});\n  const [lightsCatalog, setlightsCatalog] = useState({});\n  const [modelIds, setModelIds] = useState([]);\n  const [type, setType] = useState(\"none\");\n  const [message, setMessage] = useState(\"no message\");\n  const [lightForm, setLightForm] = useState(false);\n\n  const searchForLights = () => {\n    if (API_KEY !== undefined) {\n      axios\n        .post(`${HOST_IP}/api/${API_KEY}/lights`, \"\")\n        .then((fetchedData) => {\n          console.log(fetchedData.data);\n          setMessage(\"Searching for new lights...\");\n          setType(\"none\");\n          setType(\"success\");\n        })\n        .catch((error) => {\n          console.error(error);\n          setMessage(\"Error occured, check browser console\");\n          setType(\"none\");\n          setType(\"error\");\n        });\n    }\n  };\n\n  useEffect(() => {\n    const fetchLights = () => {\n      if (API_KEY !== undefined) {\n        axios\n          .get(`${HOST_IP}/lights`)\n          .then((fetchedData) => {\n            console.log(fetchedData.data);\n            setLights(fetchedData.data);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    };\n\n    const fetchModelIds = () => {\n      if (API_KEY !== undefined) {\n        axios\n          .get(`${HOST_IP}/light-types`)\n          .then((fetchedData) => {\n            console.log(fetchedData.data);\n            setModelIds(fetchedData.data[\"result\"]);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    };\n\n    const fetchLightsCatalog = () => {\n      if (API_KEY !== undefined) {\n        axios\n          .get(`https://raw.githubusercontent.com/diyhue/Lights/master/catalog.json`)\n          .then((fetchedData) => {\n            console.log(fetchedData.data);\n            setlightsCatalog(fetchedData.data);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    };\n\n\n    fetchLights();\n    fetchModelIds();\n    fetchLightsCatalog();\n    const interval = setInterval(() => {\n      fetchLights();\n    }, 2000); // <<-- ⏱ 1000ms = 1s\n    return () => clearInterval(interval);\n  }, [HOST_IP, API_KEY]);\n\n  return (\n    <div className=\"content\">\n      <div className=\"inner\">\n        <div className=\"devicecontainer\">\n      {type !== \"none\" && (\n        <Flash\n          type={type}\n          message={message}\n          duration=\"5000\"\n          setType={setType}\n        />\n      )}\n      <div className=\"contentContainer lights\">\n        <div className=\"headline\">Light Configuration</div>\n        <div className=\"btn generic\" onClick={() => searchForLights()}>\n          Scan For Lights\n          <div className=\"btn btn-block\"></div>\n        </div>\n        <button\n          onClick={() => setLightForm(!lightForm)}\n          className=\"generic\"\n          style={{}}\n        >\n          Add light manually\n        </button>\n        {lightForm && <AddLight\n          setType={setType}\n          setMessage={setMessage}\n          HOST_IP={HOST_IP}\n          API_KEY={API_KEY}>\n        </AddLight>}\n      </div>\n      <div className=\"cardGrid\">\n        {Object.entries(lights).map(([id, light]) => (\n          <Light\n            key={id}\n            HOST_IP={HOST_IP}\n            api_key={API_KEY}\n            id={id}\n            light={light}\n            modelIds={modelIds}\n            setType={setType}\n            setMessage={setMessage}\n            lightsCatalog={lightsCatalog}\n          />\n        ))}\n      </div>\n    </div>\n    </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}